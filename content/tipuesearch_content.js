var tipuesearch = {"pages": [{'title': 'ABOUT', 'text': '40823116 四設計二甲\xa0 江東祐 \n 網頁\xa0 https://40823116.github.io/cd2021/content/index.html \n 倉儲\xa0 https://github.com/40823116/cd2021 \n \n', 'tags': '', 'url': 'ABOUT.html'}, {'title': 'stage1', 'text': '', 'tags': '', 'url': 'stage1.html'}, {'title': 'W2', 'text': '由另一位組員構思主題，最後訂定為自動寵物飼料機，並且由我繪製後半部分及修改。 \n Inventor2017自動寵物飼料機 \n \n https://drive.google.com/file/d/1lA8aTwoB9qaprvF4VHMq7TYMH2LgLTIg/view?usp=sharing \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '使用coppeliasim進行模擬，在過程中產生了幾個問題與改良機會。 \n 在上方攪拌器中的攪拌片一開始的表現就較為不理想，一次性地將過多的飼料撥入槽內，使的部分飼料卡在孔隙，於是我們進行了夏墅的變更。 \n \n 初步建模時的攪拌片，旋轉時會會不太穩定，在後來的改動中，中間連結一個套筒，底部加裝幾個齒，且增加為六片，模擬起來也較為順暢。 \n \n 在運輸終點的飼料盆，也發現了可以改良的機會。 \n 初步建模用了較大的圓角，目的為防止寵物被盆口刮傷，模擬後卻因為前方檔片過低，飼料會滑出槽外，所以把原角的直徑縮小，既不會使寵物受傷，也變相提高檔片的高度。 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': '在最後的一周，我在成品的外觀上添加一些裝飾，希望能達到吸引目光的效果。 \n \n 花紋設計 \n 還有加裝一個蓋子，不讓寵物直接取得食物。 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'stage2', 'text': '', 'tags': '', 'url': 'stage2.html'}, {'title': 'W5-W6', 'text': '組員增加至4人，並使用heroku \n', 'tags': '', 'url': 'W5-W6.html'}, {'title': 'W7-W8', 'text': '', 'tags': '', 'url': 'W7-W8.html'}, {'title': 'stage3', 'text': '', 'tags': '', 'url': 'stage3.html'}, {'title': 'W10-W11', 'text': '', 'tags': '', 'url': 'W10-W11.html'}, {'title': 'task1', 'text': '作業ㄉ程式 \n # open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open("stage3_2a.txt") as fh:\n    # readlines will read into the whole line and put into 16 list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n    data = [a.replace(\'4823122\',\'40823122\') for a in data]\n    data = [b.replace(\'\\t\\t\\t\\t\',\' \') for b in data]\n    print(data)\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    print(\'<p>\'+group[0]+\'|<a href="https://\'+group[1]+\'.github.io/stage3-ag\'+group[0][9]+\'">網站</a> | <a href="https://github.com/\'+group[2]+\'/stage3-ag\'+group[0][9]+\'">倉儲</a></p>\')\n    for j in range(2,17,2):\n        try:\n            print(\'<p>\'+group[j]+\'|<a href="https://\'+group[j]+\'.github.io/cd2021">網站</a> | <a href="https://github.com/\'+group[2]+\'/cd2021">倉儲</a> | <a href="https://\'+group[j]+\'.github.io/stage3-ag\'+group[0][9]+\'">小組網站</a></p>\')\n        except:\n            continue\n#  the following will use group data to generate needed html \n 完成品 \n stage3_ag1| 網站  |  倉儲 \n 40823131| 網站  |  倉儲  |  小組網站 \n a40823112| 網站  |  倉儲  |  小組網站 \n 40823123| 網站  |  倉儲  |  小組網站 \n 40823145| 網站  |  倉儲  |  小組網站 \n 40823136| 網站  |  倉儲  |  小組網站 \n 40823109| 網站  |  倉儲  |  小組網站 \n 40823116| 網站  |  倉儲  |  小組網站 \n 40823108| 網站  |  倉儲  |  小組網站 \n stage3_ag2| 網站  |  倉儲 \n 40823151| 網站  |  倉儲  |  小組網站 \n 40623121| 網站  |  倉儲  |  小組網站 \n 40871106| 網站  |  倉儲  |  小組網站 \n 40823102| 網站  |  倉儲  |  小組網站 \n 40823104| 網站  |  倉儲  |  小組網站 \n 40823106| 網站  |  倉儲  |  小組網站 \n 40823101| 網站  |  倉儲  |  小組網站 \n 40823132| 網站  |  倉儲  |  小組網站 \n stage3_ag3| 網站  |  倉儲 \n 40823119| 網站  |  倉儲  |  小組網站 \n 40823150| 網站  |  倉儲  |  小組網站 \n 40823103| 網站  |  倉儲  |  小組網站 \n 40823107| 網站  |  倉儲  |  小組網站 \n 40523252| 網站  |  倉儲  |  小組網站 \n 40823154 | 網站  |  倉儲  |  小組網站 \n stage3_ag4| 網站  |  倉儲 \n 40823142| 網站  |  倉儲  |  小組網站 \n 40823144| 網站  |  倉儲  |  小組網站 \n 40823127| 網站  |  倉儲  |  小組網站 \n 40823148| 網站  |  倉儲  |  小組網站 \n 40823121| 網站  |  倉儲  |  小組網站 \n 40823135| 網站  |  倉儲  |  小組網站 \n 40823114| 網站  |  倉儲  |  小組網站 \n 40823146| 網站  |  倉儲  |  小組網站 \n stage3_ag5| 網站  |  倉儲 \n 40823111| 網站  |  倉儲  |  小組網站 \n 40823115| 網站  |  倉儲  |  小組網站 \n 40823128| 網站  |  倉儲  |  小組網站 \n 40823120| 網站  |  倉儲  |  小組網站 \n 40823140| 網站  |  倉儲  |  小組網站 \n 40823124| 網站  |  倉儲  |  小組網站 \n 40823139| 網站  |  倉儲  |  小組網站 \n 40823126| 網站  |  倉儲  |  小組網站 \n stage3_ag6| 網站  |  倉儲 \n 40823152| 網站  |  倉儲  |  小組網站 \n 40823110| 網站  |  倉儲  |  小組網站 \n 40823122| 網站  |  倉儲  |  小組網站 \n 40823125| 網站  |  倉儲  |  小組網站 \n 40823117| 網站  |  倉儲  |  小組網站 \n 40823129| 網站  |  倉儲  |  小組網站 \n 40823149| 網站  |  倉儲  |  小組網站 \n 40823153| 網站  |  倉儲  |  小組網站 \n', 'tags': '', 'url': 'task1.html'}, {'title': 'SSH', 'text': '利用隨身系統輸入指令sh \n 輸入指令ssh-keygen -t rsa -b 4096 -C "學號" \n 預設的鑰匙儲存在y:\\home\\.ssh目錄裡 \n \n 使用puttygen將private key(id_rsa)導入，save private key轉換為putty能夠讀懂的格式(.ppk)檔案 \n 存好(.ppk)檔後 \n \n 使用scite將public key (id_rsa.pub)打開，到工具列找到Options>Wrap就能看到 完整檔案內容 \n \n 將完整public key內容複製，進入github點擊settings，後點選SSH and GPG keys \n \n 點擊New SSH key，將複製的鑰匙貼上並儲存就可以使用了 \n \n SSH PuTTY的設定 \n 選擇前面步驟所生成之.ppk檔案 \n \n 回到Session點選 save存檔，如果這台電腦只有自己使用的話，儲存後無特殊情況不需要重新設定此步驟 \n \n 最後一步需要進入你要push的資料夾 \n 進入Y:\\tmp\\你要push的資料夾\\.git內修改config檔案 \n 從[remote "origin"]下的url =\xa0https://github.com/40823116/cd2021.git改為 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0url = git@github.com:40823116/cd2021.git \n \n', 'tags': '', 'url': 'SSH.html'}, {'title': 'W14', 'text': '', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': 'part1: \n 我們有任意的三角形，他不需要任何直角，且要標示一邊的長度為A和與之相對的角標示為a，重複這個動作將BbCc找出來，總而言之，邊都被標記為大寫ABC，角度被標記為abc，所以，餘弦規則就是這裡的這種關係 A^2 = B^2 + C^2 - 2BCcos a 他有點像畢氏定理，除了最後這個額外的條件，裡面有 cos a \n 現在，讓我們來將餘弦規則應用於我們剛才看到的特定三角形，寫下這種特殊關係非常簡單 \n 我們可以分離出條件 cos α，它給出了我們感興趣的角度 α，它是根據恆定鏈接長度 a1 和 a2 以及末端執行器的位置 x 和 y 定義的 \n 我們可以寫出角度 α 和 Q2 之間的簡單關係 ，且我們從餘弦函數的形狀知道 Q2 的 cos 必須等於 cos α 的負數，這一次，讓我們為連接角 q2 的餘弦寫一個表達式，現在我們再畫一個紅色三角形，我們將在這裡應用一些簡單的三角函數，如果我們知道Q2，然後我們就可以知道他的長度，和這個紅色的三角形長度，我們就可以寫下連接Q2角的sin關係 \n 現在我們可以考慮這個有角β且邊是藍色的較大的三角形，且三角形另一邊的長度是這個，所以，我們可以在此處根據這些參數編寫角度 β 的表達式，回到我們之前畫的紅色三角形，我們可以建立Q1和角度β之間的關係 \n 引入另一個角度γ，我們可以寫出角度γ和工具提示座標x,y之間的關係 \n β 和我們感興趣的連接角是 q1 \n 全部的關係看起來像這樣，相當複雜的關係，它為我們提供了連接的角度，即根據效應器坐標 y 和 x 的 Q1，以及一系列常量 a1 和 a2，它也是第二個關節角度 Q2 的函數 \n 所以讓我們總結一下我們在這裡得出的結論 \n 我們有 Q2 的餘弦表達式和 Q1 的表達式 現在餘弦函數約對稱於0，所以我們如果知道cos Q2的值，那麼就有兩種可能的答案，正或負的角度，我們將明確選擇正角，這意味著我可以寫出這個表達式 \n 這裡 \n 現在我們已經調用了這個雙連桿機構的逆運動學解 \n 我們有兩個連接角 Q1 和 Q2 的表達式，根據末端執行器的 x 和 y，以及一組常數，你注意到這兩個方程不是獨立的，Q1 的方程，實際上取決於 Q2 的解，在這種情況下，Q2 是負數，我們將在反餘弦前用負號寫 Q2 的解 \n 我們需要求解 Q1，因此我們將採用這個特定的紅色三角形、我們之前求解的角度 β 以及根據 y 和 x 定義的角度γ，我們在 Q1、γ 和 β 之間寫出略有不同的關係，與我們之前的不同，有變化的跡象 \n 然後，我們可以替換之前的所有等式並得出 Q1 的這個表達式，再次，這裡有符號變化，以前，這是一個負數，並且，總而言之，這是我們的二連桿機構的逆運動學的解決方案，當它是這種特定配置時，Q2為負 \n 讓我們比較這兩種解決方案，Q2 為正的情況和 Q2 為負的情況 \n part2: \n \n 在這裡，我們有剛剛看到的相同的兩個鏈接機器人，但這次我們將使用分析方法解決它，也就是說，我們將更多地依賴代數，特定代數而不是幾何 \n 我們有一個表達式 E，它是代表機構末端執行器姿勢的齊次變換，我們在上一課中看過這個，我們可以將末端執行器姿勢寫為一系列基本齊次變換 \n Q1 旋轉，A1 沿 X 方向平移，Q2 旋轉，然後 A2 沿 X 方向平移，如果我展開它，乘以所有的變換，我得到這裡顯示的表達式；代表機器人末端姿態的三個齊次變換矩陣 \n 現在對於這個特殊的兩連桿機器人，我們只對它的位置感興趣，它的 x 和 y 坐標，它們是齊次變換矩陣中的這兩個元素，所以我要把這些複製出來，所以這裡又是我們對 x 和 y 的表達式，我們要做的是一個相當常見的技巧，我們要平方並相加這兩個方程，我得到一個看起來像這樣的關係 \n 現在我可以根據末端執行器姿勢 x 和 y 以及機器人的常數 A1 和 A2 求解關節角度 Q2 \n 現在我要做的是應用角度的總和特性，我將擴展這些條件，sin Q1加 Q2 或 cos Q1 加 Q2，為了讓生活更輕鬆一點，我將建造一些變電站，所以無論我在哪裡有 cos Q2，我都會去寫 C2 ，我有sin Q2 的地方要寫 S2 \n * cos Q2 --> C2, \xa0 \xa0sin Q2 --> S2 \n 當人們查看機器人運動方程時，這是一個相當常見的速記 \n *速記:一種用符號快速記錄語言的方法，通過速記符號記錄的音節資訊，並利用縮略符號提高記錄效率。 \n 這是進行這些替換後的方程式 \n 看這兩個方程，我可以看到它們屬於一個眾所周知的形式，對於這種形式，有一個眾所周知的答案，所以我將只考慮其中一個等式，Y 的方程，並使用我們眾所周知的特性及其答案確定變量 a、b 和 c 的值，一旦我確定了這些值，那麼我就可以寫下 Q1 的答案，在這種特殊情況下它相當於 θ \n 這裡的 Q1 的表達式，再次從上一張幻燈片複製過來，我們可能還記得我們之前工作中確定這種特殊關係的形式：X 平方加 Y 平方等於這個特殊的複雜表達式，所以我可以用它代替並做一些簡化，最後得到 Q1 的這個稍微不那麼複雜的表達式，它與我在上一節中遵循幾何方法得到的表達式相同 \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '1.Onshape 零件繪製 \n base \n link1 \n link2 \n link3 \n \n \n 2.建立 CoppeliaSim 4.1.0 MTB robot 場景 \n 場景檔及程式檔 \n 第二部分 \n 操作影片 \n 內容的筆記是由組長40823131江建儒的影片做的筆記: \n 先定義一個叫move的function，裡面包含j1,j2,j3,j4 \n jointHandle是空的列表 \n j是分別用來計算j1,j2,j3,j4並轉化為徑度 \n 第一個for迴圈，從1跑到4，每次加1，總共會跑1,2,3,4，它們分別代表帶入之後會得到MTB_axis1到MTB_axis4，結果將會放入jointHandle的空的列表裡面，達到後續可以從裡面存取的目的 \n 第二個for迴圈，他一樣也是從1跑到4，下面這一行的意思表示，這個轉軸轉的徑度，i就會帶入1到4，j[i]也是一樣，從j列表中，分別取出第1,2,3,4 \n function sysCall_threadmain為主程式 \n 呼叫move出來，後面給出你想要的角度給他 \n 3. 手臂末端加入 components-gripper-suction pad 吸盤 \n 場景檔及程式檔 \n 第三部分 \n 操作影片 \n \n 4.逆向運算學函式 \n 場景檔和程式檔雲端資料夾(迴圈): \n 第四部份(迴圈) \n 操作影片(迴圈) \n \n 內容的筆記是由組長40823131江建儒的影片做的筆記: \n 與第二部分相似，多了吸盤的部分 \n enable表示吸盤判斷的一個值 \n 下面增加了if else \n if enable 這個值， \n 如果被輸入ture，就會發出信號，就會讓activity這個代號，傳回1那裏，就是吸盤會吸取的動作 \n 如果是fales的話，就是執行else的部分，吸盤就會放掉 這邊也是一樣，主程式呼叫後，在第五個地方，指定這個階段吸盤是要吸還是放 \n 利用ik算出來有4個角度，第一個部分43.79,-66.2053，第二個部分-158.2529,-87.7894 \n \n 場景檔和程式檔雲端資料夾(鍵盤): \n 第四部份(鍵盤) \n 操作影片(鍵盤) \n 內容的筆記是由組長40823131江建儒的影片做的筆記: \n 說明每個按鍵會做的事 \n 按下L，我們有設置2個角度，分別是0.2跟0.7位置的角度，下面兩行在按下L時會執行這兩行，控制這兩根軸(axis1，axis2)分別轉deg1和deg2 \n R以此類推，R是-0.3和-0.55 \n 下面也是以此類推，下面就是個轉各自的角度 \n D跟U就是上下移動，link3和吸盤會上下移動 ，要移動到對的地方才會做動 \n B是回歸原點，2個角度都設0 \n 5.Python remote API逆向運算學函式 場景檔和程式檔雲端資料夾: \n 第五部分 \n 操作影片 \n 內容的筆記是由組長40823131江建儒的影片做的筆記: \n 定義函式move，裡面有3個變數，因為要控制三個軸，我們先定義每個軸控制的部分 jointhandle給三個元素 j一樣可以用for迴圈提取裡面的計算的值 下面for迴圈range3，0 1 2三個，因為range是python語法，和lua不同所以要改寫， simxSetJointPosition也要改寫成python remote api的格式 jointhandle i，他會先取第1項0，接續取第二項1第三項2 \n 然後再定義一個吸和吐的函式 我們指定吸的這個給他的吸盤一個1的信號，讓他執行1的動作 吐就是給他0的信號，讓他不吸了 \n 心得: \n 這一次的分組討論，我很開心能夠參與，程式的部分我本來就比較不熟悉，但是藉由組長拍設影片的方式，讓我整理了筆記，能夠理解內容，並且和組員們分工完成這一次的考題。 \n', 'tags': '', 'url': 'W16.html'}, {'title': '倉儲flagged解決方案', 'text': '先申請gogs帳號，然後進入 https://fossil.kmol.info:3443/ ，然後建立儲存庫命名為與原本相同的倉儲名稱 \n 然後使用隨身系統進入倉儲資料夾，輸入git remote add fossilhttp://fossil.kmol.info:3000/帳號/倉儲名稱.git \n \n 接著git push fossil \n', 'tags': '', 'url': '倉儲flagged解決方案.html'}, {'title': '利用heroku取代 github pages', 'text': '先註冊heroku帳號，然後create new app，輸入名稱開頭記得的小寫英文，記得更改start.bat 內容 \n 然後就可以在隨身系統進入操庫資料夾，輸入 \n \n 然後會讓你輸入帳號及密碼，接著打入指令 \n 後面為app的名稱 \n 最後git push heroku 就完成ㄌ \n \n \n \n \n', 'tags': '', 'url': '利用heroku取代 github pages.html'}]};